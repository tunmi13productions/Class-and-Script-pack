/*
Note: This class is very old, and does not work very efficiently. I highly recommend using Audio Form, however this class has been put here in case some people insist on using it.
Sub Menu class
by tunmi13
This class allows you to create submenus, or various menus containing items. I know it may not be the best class, but I hope it does provide what some people might require.
*/
#include "speech.nvgt"
class sub_menu_system{
sub_menu@[]subs;
int subcounter=0;
int level=0;
bool say_sub_menu=true;
string subclick,menuclick;
sound sclick,mclick;
sub_menu_system(){
this.say_sub_menu=true;
this.subclick="subclick.ogg";
this.menuclick="menuclick.ogg";
if(subclick!="") sclick.load(subclick);
if(menuclick!="") mclick.load(menuclick);
}
void reset(){
subs.resize(0);
}
int get_sub_index(const string&in subname){
for(uint i=0; i<subs.length(); i++){
if(subs[i].title==subname) return i;
}
return -1;
}
void add_sub_menu(const string&in menuname){
if(get_sub_index(menuname)>-1) return;
sub_menu temp(menuname);
subs.insert_last(temp);
}
void add_sub_menu_item(const string&in subname, const string&in itemname){
int s=get_sub_index(subname);
if(s<=-1) return;
subs[s].items.insert_last(itemname);
}
string run(const string&in title)
{
if(title!="") speak(title);
while(true){
wait(5);
if(key_pressed(KEY_LEFT))
{
if(sclick.active) sclick.stop(); sclick.play();
if(subcounter<=0){
subcounter=subs.length()-1;
}
else{
subcounter--;
}
speak(subs[subcounter].title+(say_sub_menu?" subMenu":""));
subs[subcounter].itmcount=0;
level=0;
}
if(key_pressed(KEY_RIGHT))
{
if(sclick.active) sclick.stop(); sclick.play();
if(subcounter>=subs.length()-1){
subcounter=0;
}
else{
subcounter++;
}
speak(subs[subcounter].title+(say_sub_menu?" subMenu":""));
subs[subcounter].itmcount=0;
level=0;
}
if(key_pressed(KEY_DOWN)){
if(mclick.active) mclick.stop(); mclick.play();
if(subs[subcounter].itmcount>=subs[subcounter].items.length()-1)
{
subs[subcounter].itmcount=0;
}
else{
subs[subcounter].itmcount++;
}
speak(subs[subcounter].items[subs[subcounter].itmcount]);
level=1;
}
if(key_pressed(KEY_UP)){
if(mclick.active) mclick.stop(); mclick.play();
if(subs[subcounter].itmcount<=0)
{
subs[subcounter].itmcount=subs[subcounter].items.length()-1;
}
else{
subs[subcounter].itmcount--;
}
speak(subs[subcounter].items[subs[subcounter].itmcount]);
level=1;
}
if(key_pressed(KEY_RETURN) and level==1)
{
return subs[subcounter].title+":"+subs[subcounter].items[subs[subcounter].itmcount];
}
if(key_pressed(KEY_ESCAPE))break;
}
return "";
}
}
class sub_menu{
string title;
string[]items;
int itmcount;
sub_menu(string ttl){
title=ttl;
}
}